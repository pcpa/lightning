#define DEBUG_REGISTERS	1
#include "alu.inc"

.code	$(8 * 1024 * 1024)
	prolog 0

#define HMUL(N, T, I0, I1, V)	ALU(N, T, hmul, I0, I1, V)
	HMUL(0, i,	0x7fffffff, 1,		0)
	HMUL(1, i,	1,	    0x7fffffff, 0)
	HMUL(2, i,	0x80000000, 2,		0xffffffff)
	HMUL(3, i,	2,	    0x80000000, 0xffffffff)
	HMUL(4, i,	0x7fffffff, 7,		3)
	HMUL(5, i,	7,	    0x7fffffff,	3)
	HMUL(6, i,	0x80000000, 0x7fff,	0xffffc000)
	HMUL(7, i,	0x7fff,	    0x80000000, 0xffffc000)
	HMUL(8, i,	0x7fffffff, 0x80000000, 0xc0000000)
	HMUL(9, i,	0x80000000, 0x7fffffff, 0xc0000000)
	HMUL(10, i,	0x7fffffff, 0,		0)
	HMUL(11, i,	0,	    0x7fffffff,	0)
	HMUL(12, i,	0x7fffffff, 0xffffffff, 0xffffffff)
	HMUL(13, i,	0xffffffff, 0x7fffffff, 0xffffffff)
	HMUL(14, i,	0xffffffff, 0xffffffff, 0)
	HMUL(0, ui,	0x7fffffff, 1,		0)
	HMUL(1, ui,	1,	    0x7fffffff, 0)
	HMUL(2, ui,	0x80000000, 2,		1)
	HMUL(3, ui,	2,	    0x80000000, 1)
	HMUL(4, ui,	0x7fffffff, 7,		3)
	HMUL(5, ui,	7,	    0x7fffffff,	3)
	HMUL(6, ui,	0x80000000, 0x7fff,	0x3fff)
	HMUL(7, ui,	0x7fff,	    0x80000000, 0x3fff)
	HMUL(8, ui,	0x7fffffff, 0x80000000, 0x3fffffff)
	HMUL(9, ui,	0x80000000, 0x7fffffff, 0x3fffffff)
	HMUL(10, ui,	0x7fffffff, 0,		0)
	HMUL(11, ui,	0,	    0x7fffffff,	0)
	HMUL(12, ui,	0x7fffffff, 0xffffffff, 0x7ffffffe)
	HMUL(13, ui,	0xffffffff, 0x7fffffff, 0x7ffffffe)
	HMUL(14, ui,	0xffffffff, 0xffffffff, 0xfffffffe)
#if __WORDSIZE == 32
	HMUL(0, l,	0x7fffffff, 1,		0)
	HMUL(1, l,	1,	    0x7fffffff, 0)
	HMUL(2, l,	0x80000000, 2,		0xffffffff)
	HMUL(3, l,	2,	    0x80000000, 0xffffffff)
	HMUL(4, l,	0x7fffffff, 7,		3)
	HMUL(5, l,	7,	    0x7fffffff,	3)
	HMUL(6, l,	0x80000000, 0x7fff,	0xffffc000)
	HMUL(7, l,	0x7fff,	    0x80000000, 0xffffc000)
	HMUL(8, l,	0x7fffffff, 0x80000000, 0xc0000000)
	HMUL(9, l,	0x80000000, 0x7fffffff, 0xc0000000)
	HMUL(10, l,	0x7fffffff, 0,		0)
	HMUL(11, l,	0,	    0x7fffffff,	0)
	HMUL(12, l,	0x7fffffff, 0xffffffff, 0xffffffff)
	HMUL(13, l,	0xffffffff, 0x7fffffff, 0xffffffff)
	HMUL(14, l,	0xffffffff, 0xffffffff, 0)
	HMUL(0, ul,	0x7fffffff, 1,		0)
	HMUL(1, ul,	1,	    0x7fffffff, 0)
	HMUL(2, ul,	0x80000000, 2,		1)
	HMUL(3, ul,	2,	    0x80000000, 1)
	HMUL(4, ul,	0x7fffffff, 7,		3)
	HMUL(5, ul,	7,	    0x7fffffff,	3)
	HMUL(6, ul,	0x80000000, 0x7fff,	0x3fff)
	HMUL(7, ul,	0x7fff,	    0x80000000, 0x3fff)
	HMUL(8, ul,	0x7fffffff, 0x80000000, 0x3fffffff)
	HMUL(9, ul,	0x80000000, 0x7fffffff, 0x3fffffff)
	HMUL(10, ul,	0x7fffffff, 0,		0)
	HMUL(11, ul,	0,	    0x7fffffff,	0)
	HMUL(12, ul,	0x7fffffff, 0xffffffff, 0x7ffffffe)
	HMUL(13, ul,	0xffffffff, 0x7fffffff, 0x7ffffffe)
	HMUL(14, ul,	0xffffffff, 0xffffffff, 0xfffffffe)
#else
	HMUL(0, l,	0x7fffffff,	    1,			0)
	HMUL(1, l,	1,		    0x7fffffff,		0)
	HMUL(2, l,	0x80000000,	    0x200000000,	1)
	HMUL(3, l,	0x200000000,	    0x80000000,		1)
	HMUL(4, l,	0x7fffffff,	    0x700000000,	3)
	HMUL(5, l,	0x700000000,	    0x7fffffff,		3)
	HMUL(6, l,	0x80000000,	    0x7fffffffffff,	0x3fff)
	HMUL(7, l,	0x7fffffffffff,	    0x80000000, 	0x3fff)
	HMUL(8, l,	0x7fffffffffff,	    0x800000000000,	0x3fffffff)
	HMUL(9, l,	0x800000000000,	    0x7fffffffffff,	0x3fffffff)
	HMUL(10, l,	0x7fffffff,	    0,			0)
	HMUL(11, l,	0,		    0x7fffffff,		0)
	HMUL(12, l,	0x7fffffffffff,	    0xffffffffffff,	0x7fffffff)
	HMUL(13, l,	0xffffffffffff,	    0x7fffffffffff,	0x7fffffff)
	HMUL(14, l,	0xffffffffff,	    0xffffffffff,	0xffff)
	HMUL(15, l,	0x7fffffffffffffff, 1,			0)
	HMUL(16, l,	1,		    0x7fffffffffffffff,	0)
	HMUL(17, l,	0x8000000000000000, 2,			0xffffffffffffffff)
	HMUL(18, l,	2,		    0x8000000000000000,	0xffffffffffffffff)
	HMUL(19, l,	0x7fffffffffffffff, 7,			3)
	HMUL(20, l,	7,		    0x7fffffffffffffff,	3)
	HMUL(21, l,	0x8000000000000000, 0x7fff,		0xffffffffffffc000)
	HMUL(22, l,	0x7fff,		    0x8000000000000000,	0xffffffffffffc000)
	HMUL(23, l,	0x7fffffffffffffff, 0x8000000000000000,	0xc000000000000000)
	HMUL(24, l,	0x8000000000000000, 0x7fffffffffffffff,	0xc000000000000000)
	HMUL(25, l,	0x7fffffffffffffff, 0xffffffffffffffff,	0xffffffffffffffff)
	HMUL(26, l,	0xffffffffffffffff, 0x7fffffffffffffff,	0xffffffffffffffff)
	HMUL(27, l,	0xffffffffffffffff, 0xffffffffffffffff,	0)
	HMUL(0, ul,	0x7fffffff,	    1,			0)
	HMUL(1, ul,	1,		    0x7fffffff,		0)
	HMUL(2, ul,	0x80000000,	    0x200000000,	1)
	HMUL(3, ul,	0x200000000,	    0x80000000,		1)
	HMUL(4, ul,	0x7fffffff,	    0x700000000,	3)
	HMUL(5, ul,	0x700000000,	    0x7fffffff,		3)
	HMUL(6, ul,	0x80000000,	    0x7fffffffffff,	0x3fff)
	HMUL(7, ul,	0x7fffffffffff,	    0x80000000, 	0x3fff)
	HMUL(8, ul,	0x7fffffffffff,	    0x800000000000,	0x3fffffff)
	HMUL(9, ul,	0x800000000000,	    0x7fffffffffff,	0x3fffffff)
	HMUL(10, ul,	0x7fffffff,	    0,			0)
	HMUL(11, ul,	0,		    0x7fffffff,		0)
	HMUL(12, ul,	0x7fffffffffff,	    0xffffffffffff,	0x7fffffff)
	HMUL(13, ul,	0xffffffffffff,	    0x7fffffffffff,	0x7fffffff)
	HMUL(14, ul,	0xffffffffff,	    0xffffffffff,	0xffff)
	HMUL(15, ul,	0x7fffffffffffffff, 1,			0)
	HMUL(16, ul,	1,		    0x7fffffffffffffff,	0)
	HMUL(17, ul,	0x8000000000000000, 2,			1)
	HMUL(18, ul,	2,		    0x8000000000000000,	1)
	HMUL(19, ul,	0x7fffffffffffffff, 7,			3)
	HMUL(20, ul,	7,		    0x7fffffffffffffff,	3)
	HMUL(21, ul,	0x8000000000000000, 0x7fff,		0x3fff)
	HMUL(22, ul,	0x7fff,		    0x8000000000000000,	0x3fff)
	HMUL(23, ul,	0x7fffffffffffffff, 0x8000000000000000,	0x3fffffffffffffff)
	HMUL(24, ul,	0x8000000000000000, 0x7fffffffffffffff,	0x3fffffffffffffff)
	HMUL(25, ul,	0x7fffffffffffffff, 0xffffffffffffffff,	0x7ffffffffffffffe)
	HMUL(26, ul,	0xffffffffffffffff, 0x7fffffffffffffff,	0x7ffffffffffffffe)
	HMUL(27, ul,	0xffffffffffffffff, 0xffffffffffffffff,	0xfffffffffffffffe)
#endif

#undef HMUL
#define HMUL(N, T, I0, V)	ALUC(N, T, hmul, I0, V)
	HMUL(0, i,	0,			0)
	HMUL(1, i,	0x7fffffff,		0x3fffffff)
	HMUL(2, i,	0x80000000,		0x40000000)
	HMUL(0, ui,	0,			0)
	HMUL(1, ui,	0x7fffffff,		0x3fffffff)
	HMUL(2, ui,	0x80000000,		0x40000000)
#if __WORDSIZE == 32
	HMUL(0, l,	0,			0)
	HMUL(1, l,	0x7fffffff,		0x3fffffff)
	HMUL(2, l,	0x80000000,		0x40000000)
	HMUL(0, ul,	0,			0)
	HMUL(1, ul,	0x7fffffff,		0x3fffffff)
	HMUL(2, ul,	0x80000000,		0x40000000)
#else
	HMUL(0, l,	0,			0)
	HMUL(1, l,	0x7fffffff,		0)
	HMUL(2, l,	0x80000000,		0)
	HMUL(3, l,	0x7fffffffffffffff,	0x3fffffffffffffff)
	HMUL(4, l,	0x8000000000000000,	0x4000000000000000)
	HMUL(0, ul,	0,			0)
	HMUL(1, ul,	0x7fffffff,		0)
	HMUL(2, ul,	0x80000000,		0)
	HMUL(3, ul,	0x7fffffffffffffff,	0x3fffffffffffffff)
	HMUL(4, ul,	0x8000000000000000,	0x4000000000000000)
#endif

	ret
