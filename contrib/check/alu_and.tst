#include "alu.inc"

.code	$(4 * 1024 * 1024)
	prolog 0

#define AND(N, T, I0, I1, V)	ALU(N, T, and, I0, I1, V)
	AND(0, i,	0x7fffffff, 1,		1)
	AND(1, i,	1,	    0x7fffffff, 1)
	AND(2, i,	0x80000000, 1,		0)
	AND(3, i,	1,	    0x80000000, 0)
	AND(4, i,	0x7fffffff, 0x80000000, 0)
	AND(5, i,	0x80000000, 0x7fffffff, 0)
	AND(6, i,	0x7fffffff, 0xffffffff, 0x7fffffff)
	AND(7, i,	0xffffffff, 0x7fffffff, 0x7fffffff)
	AND(9, i,	0xffffffff, 0xffffffff, 0xffffffff)
	AND(10, i,	0x7fffffff, 0,		0)
	AND(11, i,	0,	    0x7fffffff,	0)
	AND(0, ui,	0x7fffffff, 1,		1)
	AND(1, ui,	1,	    0x7fffffff, 1)
	AND(2, ui,	0x80000000, 1,		0)
	AND(3, ui,	1,	    0x80000000, 0)
	AND(4, ui,	0x7fffffff, 0x80000000, 0)
	AND(5, ui,	0x80000000, 0x7fffffff, 0)
	AND(6, ui,	0x7fffffff, 0xffffffff, 0x7fffffff)
	AND(7, ui,	0xffffffff, 0x7fffffff, 0x7fffffff)
	AND(9, ui,	0xffffffff, 0xffffffff, 0xffffffff)
	AND(10, ui,	0x7fffffff, 0,		0)
	AND(11, ui,	0,	    0x7fffffff,	0)
#if __WORDSIZE == 32
	AND(0, l,	0x7fffffff, 1,		1)
	AND(1, l,	1,	    0x7fffffff, 1)
	AND(2, l,	0x80000000, 1,		0)
	AND(3, l,	1,	    0x80000000, 0)
	AND(4, l,	0x7fffffff, 0x80000000, 0)
	AND(5, l,	0x80000000, 0x7fffffff, 0)
	AND(6, l,	0x7fffffff, 0xffffffff, 0x7fffffff)
	AND(7, l,	0xffffffff, 0x7fffffff, 0x7fffffff)
	AND(9, l,	0xffffffff, 0xffffffff, 0xffffffff)
	AND(10, l,	0x7fffffff, 0,		0)
	AND(11, l,	0,	    0x7fffffff,	0)
	AND(0, ul,	0x7fffffff, 1,		1)
	AND(1, ul,	1,	    0x7fffffff, 1)
	AND(2, ul,	0x80000000, 1,		0)
	AND(3, ul,	1,	    0x80000000, 0)
	AND(4, ul,	0x7fffffff, 0x80000000, 0)
	AND(5, ul,	0x80000000, 0x7fffffff, 0)
	AND(6, ul,	0x7fffffff, 0xffffffff, 0x7fffffff)
	AND(7, ul,	0xffffffff, 0x7fffffff, 0x7fffffff)
	AND(9, ul,	0xffffffff, 0xffffffff, 0xffffffff)
	AND(10, ul,	0x7fffffff, 0,		0)
	AND(11, ul,	0,	    0x7fffffff,	0)
#else
	AND(0, l,	0x7fffffff,	    1,			1)
	AND(1, l,	1,		    0x7fffffff,		1)
	AND(2, l,	0x80000000,	    1,			0)
	AND(3, l,	1,		    0x80000000,		0)
	AND(4, l,	0x7fffffff,	    0x80000000,		0)
	AND(5, l,	0x80000000,	    0x7fffffff,		0)
	AND(6, l,	0x7fffffff,	    0xffffffff,		0x7fffffff)
	AND(7, l,	0xffffffff,	    0x7fffffff,		0x7fffffff)
	AND(9, l,	0xffffffff,	    0xffffffff,		0xffffffff)
	AND(10, l,	0x7fffffff,	    0,			0)
	AND(11, l,	0,		    0x7fffffff,		0)
	AND(12, l,	0x7fffffffffffffff, 1,			1)
	AND(13, l,	1,		    0x7fffffffffffffff,	1)
	AND(14, l,	0x8000000000000000, 1,			0)
	AND(15, l,	1,		    0x8000000000000000,	0)
	AND(16, l,	0x7fffffffffffffff, 0x8000000000000000,	0)
	AND(17, l,	0x8000000000000000, 0x7fffffffffffffff,	0)
	AND(18, l,	0x7fffffffffffffff, 0xffffffffffffffff,	0x7fffffffffffffff)
	AND(19, l,	0xffffffffffffffff, 0x7fffffffffffffff,	0x7fffffffffffffff)
	AND(20, l,	0xffffffffffffffff, 0xffffffffffffffff,	0xffffffffffffffff)
	AND(0, ul,	0x7fffffff,	    1,			1)
	AND(1, ul,	1,		    0x7fffffff,		1)
	AND(2, ul,	0x80000000,	    1,			0)
	AND(3, ul,	1,		    0x80000000,		0)
	AND(4, ul,	0x7fffffff,	    0x80000000,		0)
	AND(5, ul,	0x80000000,	    0x7fffffff,		0)
	AND(6, ul,	0x7fffffff,	    0xffffffff,		0x7fffffff)
	AND(7, ul,	0xffffffff,	    0x7fffffff,		0x7fffffff)
	AND(9, ul,	0xffffffff,	    0xffffffff,		0xffffffff)
	AND(10, ul,	0x7fffffff,	    0,			0)
	AND(11, ul,	0,		    0x7fffffff,		0)
	AND(12, ul,	0x7fffffffffffffff, 1,			1)
	AND(13, ul,	1,		    0x7fffffffffffffff,	1)
	AND(14, ul,	0x8000000000000000, 1,			0)
	AND(15, ul,	1,		    0x8000000000000000,	0)
	AND(16, ul,	0x7fffffffffffffff, 0x8000000000000000,	0)
	AND(17, ul,	0x8000000000000000, 0x7fffffffffffffff,	0)
	AND(18, ul,	0x7fffffffffffffff, 0xffffffffffffffff,	0x7fffffffffffffff)
	AND(19, ul,	0xffffffffffffffff, 0x7fffffffffffffff,	0x7fffffffffffffff)
	AND(20, ul,	0xffffffffffffffff, 0xffffffffffffffff,	0xffffffffffffffff)
#endif

#undef AND
#define AND(N, T, I0, V)	ALUC(N, T, and, I0, V)
	AND(0, i,	0,			0)
	AND(1, i,	0x7fffffff,		0x7fffffff)
	AND(2, i,	0x80000000,		0x80000000)
	AND(3, i,	0xffffffff,		0xffffffff)
	AND(0, ui,	0,			0)
	AND(1, ui,	0x7fffffff,		0x7fffffff)
	AND(2, ui,	0x80000000,		0x80000000)
	AND(3, ui,	0xffffffff,		0xffffffff)
#if __WORDSIZE == 32
	AND(0, l,	0,			0)
	AND(1, l,	0x7fffffff,		0x7fffffff)
	AND(2, l,	0x80000000,		0x80000000)
	AND(3, l,	0xffffffff,		0xffffffff)
	AND(0, ul,	0,			0)
	AND(1, ul,	0x7fffffff,		0x7fffffff)
	AND(2, ul,	0x80000000,		0x80000000)
	AND(3, ul,	0xffffffff,		0xffffffff)
#else
	AND(0, l,	0,			0)
	AND(1, l,	0x7fffffff,		0x7fffffff)
	AND(2, l,	0x80000000,		0x80000000)
	AND(3, l,	0xffffffff,		0xffffffff)
	AND(4, l,	0x7fffffffffffffff,	0x7fffffffffffffff)
	AND(5, l,	0x8000000000000000,	0x8000000000000000)
	AND(6, l,	0xffffffffffffffff,	0xffffffffffffffff)
	AND(0, ul,	0,			0)
	AND(1, ul,	0x7fffffff,		0x7fffffff)
	AND(2, ul,	0x80000000,		0x80000000)
	AND(3, ul,	0xffffffff,		0xffffffff)
	AND(4, ul,	0x7fffffffffffffff,	0x7fffffffffffffff)
	AND(5, ul,	0x8000000000000000,	0x8000000000000000)
	AND(6, ul,	0xffffffffffffffff,	0xffffffffffffffff)
#endif

	ret
