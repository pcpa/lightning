#include "alu.inc"

.code	$(4 * 1024 * 1024)
	prolog 0

#define DIV(N, T, I0, I1, V)	ALU(N, T, div, I0, I1, V)
	DIV(0, i,	0x7fffffff, 1,		0x7fffffff)
	DIV(1, i,	1,	    0x7fffffff, 0)
	DIV(2, i,	0x80000000, 1,		0x80000000)
	DIV(3, i,	1,	    0x80000000, 0)
	DIV(4, i,	0x7fffffff, 2,		0x3fffffff)
	DIV(5, i,	2,	    0x7fffffff,	0)
	DIV(6, i,	0x80000000, 2,		0xc0000000)
	DIV(7, i,	2,	    0x80000000, 0)
	DIV(8, i,	0x7fffffff, 0x80000000, 0)
	DIV(9, i,	0x80000000, 0x7fffffff, 0xffffffff)
	DIV(10, i,	0,	    0x7fffffff,	0)
	DIV(11, i,	0x7fffffff, 0xffffffff, 0x80000001)
	DIV(12, i,	0xffffffff, 0x7fffffff, 0)
	DIV(13, i,	0xffffffff, 0xffffffff, 1)
	DIV(0, ui,	0x7fffffff, 1,		0x7fffffff)
	DIV(1, ui,	1,	    0x7fffffff, 0)
	DIV(2, ui,	0x80000000, 1,		0x80000000)
	DIV(3, ui,	1,	    0x80000000, 0)
	DIV(4, ui,	0x7fffffff, 2,		0x3fffffff)
	DIV(5, ui,	2,	    0x7fffffff,	0)
	DIV(6, ui,	0x80000000, 2,		0x40000000)
	DIV(7, ui,	2,	    0x80000000, 0)
	DIV(8, ui,	0x7fffffff, 0x80000000, 0)
	DIV(9, ui,	0x80000000, 0x7fffffff, 1)
	DIV(10, ui,	0,	    0x7fffffff,	0)
	DIV(11, ui,	0x7fffffff, 0xffffffff, 0)
	DIV(12, ui,	0xffffffff, 0x7fffffff, 2)
	DIV(13, ui,	0xffffffff, 0xffffffff, 1)
#if __WORDSIZE == 32
	DIV(0, l,	0x7fffffff, 1,		0x7fffffff)
	DIV(1, l,	1,	    0x7fffffff, 0)
	DIV(2, l,	0x80000000, 1,		0x80000000)
	DIV(3, l,	1,	    0x80000000, 0)
	DIV(4, l,	0x7fffffff, 2,		0x3fffffff)
	DIV(5, l,	2,	    0x7fffffff,	0)
	DIV(6, l,	0x80000000, 2,		0xc0000000)
	DIV(7, l,	2,	    0x80000000, 0)
	DIV(8, l,	0x7fffffff, 0x80000000, 0)
	DIV(9, l,	0x80000000, 0x7fffffff, 0xffffffff)
	DIV(10, l,	0,	    0x7fffffff,	0)
	DIV(11, l,	0x7fffffff, 0xffffffff, 0x80000001)
	DIV(12, l,	0xffffffff, 0x7fffffff, 0)
	DIV(13, l,	0xffffffff, 0xffffffff, 1)
	DIV(0, ul,	0x7fffffff, 1,		0x7fffffff)
	DIV(1, ul,	1,	    0x7fffffff, 0)
	DIV(2, ul,	0x80000000, 1,		0x80000000)
	DIV(3, ul,	1,	    0x80000000, 0)
	DIV(4, ul,	0x7fffffff, 2,		0x3fffffff)
	DIV(5, ul,	2,	    0x7fffffff,	0)
	DIV(6, ul,	0x80000000, 2,		0x40000000)
	DIV(7, ul,	2,	    0x80000000, 0)
	DIV(8, ul,	0x7fffffff, 0x80000000, 0)
	DIV(9, ul,	0x80000000, 0x7fffffff, 1)
	DIV(10, ul,	0,	    0x7fffffff,	0)
	DIV(11, ul,	0x7fffffff, 0xffffffff, 0)
	DIV(12, ul,	0xffffffff, 0x7fffffff, 2)
	DIV(13, ul,	0xffffffff, 0xffffffff, 1)
#else
	DIV(0, l,	0x7fffffff,	    1,			0x7fffffff)
	DIV(1, l,	1,		    0x7fffffff,		0)
	DIV(2, l,	0x80000000,	    1,			0x80000000)
	DIV(3, l,	1,		    0x80000000,		0)
	DIV(4, l,	0x7fffffff,	    2,			0x3fffffff)
	DIV(5, l,	2,		    0x7fffffff,		0)
	DIV(6, l,	0x80000000,	    2,			0x40000000)
	DIV(7, l,	2,		    0x80000000, 	0)
	DIV(8, l,	0x7fffffff,	    0x80000000,		0)
	DIV(9, l,	0x80000000,	    0x7fffffff,		1)
	DIV(10, l,	0,		    0x7fffffff,		0)
	DIV(11, l,	0x7fffffff,	    0xffffffff,		0)
	DIV(12, l,	0xffffffff,	    0x7fffffff,		2)
	DIV(13, l,	0xffffffff,	    0xffffffff,		1)
	DIV(14, l,	0x7fffffffffffffff, 1,			0x7fffffffffffffff)
	DIV(15, l,	1,		    0x7fffffffffffffff,	0)
	DIV(16, l,	0x8000000000000000, 1,			0x8000000000000000)
	DIV(17, l,	1,		    0x8000000000000000,	0)
	DIV(18, l,	0x7fffffffffffffff, 2,			0x3fffffffffffffff)
	DIV(19, l,	2,		    0x7fffffffffffffff,	0)
	DIV(20, l,	0x8000000000000000, 2,			0xc000000000000000)
	DIV(21, l,	2,		    0x8000000000000000,	0)
	DIV(22, l,	0x7fffffffffffffff, 0x8000000000000000,	0)
	DIV(23, l,	0x8000000000000000, 0x7fffffffffffffff,	0xffffffffffffffff)
	DIV(24, l,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000001)
	DIV(25, l,	0xffffffffffffffff, 0x7fffffffffffffff,	0)
	DIV(26, l,	0xffffffffffffffff, 0xffffffffffffffff,	1)
	DIV(0, ul,	0x7fffffff,	    1,			0x7fffffff)
	DIV(1, ul,	1,		    0x7fffffff,		0)
	DIV(2, ul,	0x80000000,	    1,			0x80000000)
	DIV(3, ul,	1,		    0x80000000,		0)
	DIV(4, ul,	0x7fffffff,	    2,			0x3fffffff)
	DIV(5, ul,	2,		    0x7fffffff,		0)
	DIV(6, ul,	0x80000000,	    2,			0x40000000)
	DIV(7, ul,	2,		    0x80000000,		0)
	DIV(8, ul,	0x7fffffff,	    0x80000000,		0)
	DIV(9, ul,	0x80000000,	    0x7fffffff,		1)
	DIV(10, ul,	0,		    0x7fffffff,		0)
	DIV(11, ul,	0x7fffffff,	    0xffffffff,		0)
	DIV(12, ul,	0xffffffff,	    0x7fffffff,		2)
	DIV(13, ul,	0xffffffff,	    0xffffffff,		1)
	DIV(14, ul,	0x7fffffffffffffff, 1,			0x7fffffffffffffff)
	DIV(15, ul,	1,		    0x7fffffffffffffff,	0)
	DIV(16, ul,	0x8000000000000000, 1,			0x8000000000000000)
	DIV(17, ul,	1,		    0x8000000000000000,	0)
	DIV(18, ul,	0x7fffffffffffffff, 2,			0x3fffffffffffffff)
	DIV(19, ul,	2,		    0x7fffffffffffffff,	0)
	DIV(20, ul,	0x8000000000000000, 2,			0x4000000000000000)
	DIV(21, ul,	2,		    0x8000000000000000,	0)
	DIV(22, ul,	0x7fffffffffffffff, 0x8000000000000000,	0)
	DIV(23, ul,	0x8000000000000000, 0x7fffffffffffffff,	1)
	DIV(24, ul,	0x7fffffffffffffff, 0xffffffffffffffff,	0)
	DIV(25, ul,	0xffffffffffffffff, 0x7fffffffffffffff,	2)
	DIV(26, ul,	0xffffffffffffffff, 0xffffffffffffffff,	1)
#endif

#undef DIV
#define DIV(N, T, I0, V)	ALUC(N, T, div, I0, V)
	DIV(0, i,	0x7fffffff,		1)
	DIV(1, i,	0x80000000,		1)
	DIV(2, i,	0xffffffff,		1)
	DIV(0, ui,	0x7fffffff,		1)
	DIV(1, ui,	0x80000000,		1)
	DIV(2, ui,	0xffffffff,		1)
#if __WORDSIZE == 32
	DIV(0, l,	0x7fffffff,		1)
	DIV(1, l,	0x80000000,		1)
	DIV(2, l,	0xffffffff,		1)
	DIV(0, ul,	0x7fffffff,		1)
	DIV(1, ul,	0x80000000,		1)
	DIV(2, ul,	0xffffffff,		1)
#else
	DIV(0, l,	0x7fffffff,		1)
	DIV(1, l,	0x80000000,		1)
	DIV(2, l,	0xffffffff,		1)
	DIV(3, l,	0x7fffffffffffffff,	1)
	DIV(4, l,	0x8000000000000000,	1)
	DIV(5, l,	0xffffffffffffffff,	1)
	DIV(0, ul,	0x7fffffff,		1)
	DIV(1, ul,	0x80000000,		1)
	DIV(2, ul,	0xffffffff,		1)
	DIV(3, ul,	0x7fffffffffffffff,	1)
	DIV(4, ul,	0x8000000000000000,	1)
	DIV(5, ul,	0xffffffffffffffff,	1)
#endif

#undef DIV
#define DIV(N, T, I0, I1, V)	FOP(N, T, div, I0, I1, V)
	DIV(0, f,	-0.5,	    0.5,	-1.0)
#if 0	/* FIXME: f: 0.333333 -> 0.250000 / 0.750000 = 0.333333 */
	DIV(1, f,	 0.25,	    0.75,	$(0.25 / 0.75))
#else
	DIV(1, f,	 1.25,	    0.5,	 2.5)
#endif
	DIV(0, d,	-0.5,	    0.5,	-1.0)
#if 0	/* FIXME: d: 0.333333 -> 0.250000 / 0.750000 = 0.333333 */
	DIV(1, d,	 0.25,	    0.75,	$(0.25 / 0.75))
#else
	DIV(1, d,	 1.25,	    0.5,	 2.5)
#endif

	ret
