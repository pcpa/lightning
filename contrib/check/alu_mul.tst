#include "alu.inc"

.code	$(4 * 1024 * 1024)
	prolog 0

#define MUL(N, T, I0, I1, V)	ALU(N, T, mul, I0, I1, V)
	MUL(0, i,	0x7fffffff, 1,		0x7fffffff)
	MUL(1, i,	1,	    0x7fffffff, 0x7fffffff)
	MUL(2, i,	0x80000000, 1,		0x80000000)
	MUL(3, i,	1,	    0x80000000, 0x80000000)
	MUL(4, i,	0x7fffffff, 2,		0xfffffffe)
	MUL(5, i,	2,	    0x7fffffff,	0xfffffffe)
	MUL(6, i,	0x80000000, 2,		0)
	MUL(7, i,	2,	    0x80000000, 0)
	MUL(8, i,	0x7fffffff, 0x80000000, 0x80000000)
	MUL(9, i,	0x80000000, 0x7fffffff, 0x80000000)
	MUL(10, i,	0x7fffffff, 0,		0)
	MUL(11, i,	0,	    0x7fffffff,	0)
	MUL(12, i,	0x7fffffff, 0xffffffff, 0x80000001)
	MUL(13, i,	0xffffffff, 0x7fffffff, 0x80000001)
	MUL(14, i,	0xffffffff, 0xffffffff, 1)
	MUL(0, ui,	0x7fffffff, 1,		0x7fffffff)
	MUL(1, ui,	1,	    0x7fffffff, 0x7fffffff)
	MUL(2, ui,	0x80000000, 1,		0x80000000)
	MUL(3, ui,	1,	    0x80000000, 0x80000000)
	MUL(4, ui,	0x7fffffff, 2,		0xfffffffe)
	MUL(5, ui,	2,	    0x7fffffff,	0xfffffffe)
	MUL(6, ui,	0x80000000, 2,		0)
	MUL(7, ui,	2,	    0x80000000, 0)
	MUL(8, ui,	0x7fffffff, 0x80000000, 0x80000000)
	MUL(9, ui,	0x80000000, 0x7fffffff, 0x80000000)
	MUL(10, ui,	0x7fffffff, 0,		0)
	MUL(11, ui,	0,	    0x7fffffff,	0)
	MUL(12, ui,	0x7fffffff, 0xffffffff, 0x80000001)
	MUL(13, ui,	0xffffffff, 0x7fffffff, 0x80000001)
	MUL(14, ui,	0xffffffff, 0xffffffff, 1)
#if __WORDSIZE == 32
	MUL(0, l,	0x7fffffff, 1,		0x7fffffff)
	MUL(1, l,	1,	    0x7fffffff, 0x7fffffff)
	MUL(2, l,	0x80000000, 1,		0x80000000)
	MUL(3, l,	1,	    0x80000000, 0x80000000)
	MUL(4, l,	0x7fffffff, 2,		0xfffffffe)
	MUL(5, l,	2,	    0x7fffffff,	0xfffffffe)
	MUL(6, l,	0x80000000, 2,		0)
	MUL(7, l,	2,	    0x80000000, 0)
	MUL(8, l,	0x7fffffff, 0x80000000, 0x80000000)
	MUL(9, l,	0x80000000, 0x7fffffff, 0x80000000)
	MUL(10, l,	0x7fffffff, 0,		0)
	MUL(11, l,	0,	    0x7fffffff,	0)
	MUL(12, l,	0x7fffffff, 0xffffffff, 0x80000001)
	MUL(13, l,	0xffffffff, 0x7fffffff, 0x80000001)
	MUL(14, l,	0xffffffff, 0xffffffff, 1)
	MUL(0, ul,	0x7fffffff, 1,		0x7fffffff)
	MUL(1, ul,	1,	    0x7fffffff, 0x7fffffff)
	MUL(2, ul,	0x80000000, 1,		0x80000000)
	MUL(3, ul,	1,	    0x80000000, 0x80000000)
	MUL(4, ul,	0x7fffffff, 2,		0xfffffffe)
	MUL(5, ul,	2,	    0x7fffffff,	0xfffffffe)
	MUL(6, ul,	0x80000000, 2,		0)
	MUL(7, ul,	2,	    0x80000000, 0)
	MUL(8, ul,	0x7fffffff, 0x80000000, 0x80000000)
	MUL(9, ul,	0x80000000, 0x7fffffff, 0x80000000)
	MUL(10, ul,	0x7fffffff, 0,		0)
	MUL(11, ul,	0,	    0x7fffffff,	0)
	MUL(12, ul,	0x7fffffff, 0xffffffff, 0x80000001)
	MUL(13, ul,	0xffffffff, 0x7fffffff, 0x80000001)
	MUL(14, ul,	0xffffffff, 0xffffffff, 1)
#else
	MUL(0, l,	0x7fffffff,	    1,			0x7fffffff)
	MUL(1, l,	1,		    0x7fffffff,		0x7fffffff)
	MUL(2, l,	0x80000000,	    1,			0x80000000)
	MUL(3, l,	1,		    0x80000000,		0x80000000)
	MUL(4, l,	0x7fffffff,	    2,			0xfffffffe)
	MUL(5, l,	2,		    0x7fffffff,		0xfffffffe)
	MUL(6, l,	0x80000000,	    2,			0x100000000)
	MUL(7, l,	2,		    0x80000000, 	0x100000000)
	MUL(8, l,	0x7fffffff,	    0x80000000,		0x3fffffff80000000)
	MUL(9, l,	0x80000000,	    0x7fffffff,		0x3fffffff80000000)
	MUL(10, l,	0x7fffffff,	    0,			0)
	MUL(11, l,	0,		    0x7fffffff,		0)
	MUL(12, l,	0x7fffffff,	    0xffffffff,		0x7ffffffe80000001)
	MUL(13, l,	0xffffffff,	    0x7fffffff,		0x7ffffffe80000001)
	MUL(14, l,	0xffffffff,	    0xffffffff,		0xfffffffe00000001)
	MUL(15, l,	0x7fffffffffffffff, 1,			0x7fffffffffffffff)
	MUL(16, l,	1,		    0x7fffffffffffffff,	0x7fffffffffffffff)
	MUL(17, l,	0x8000000000000000, 1,			0x8000000000000000)
	MUL(18, l,	1,		    0x8000000000000000,	0x8000000000000000)
	MUL(19, l,	0x7fffffffffffffff, 2,			0xfffffffffffffffe)
	MUL(20, l,	2,		    0x7fffffffffffffff,	0xfffffffffffffffe)
	MUL(21, l,	0x8000000000000000, 2,			0)
	MUL(22, l,	2,		    0x8000000000000000,	0)
	MUL(23, l,	0x7fffffffffffffff, 0x8000000000000000,	0x8000000000000000)
	MUL(24, l,	0x8000000000000000, 0x7fffffffffffffff,	0x8000000000000000)
	MUL(25, l,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000001)
	MUL(26, l,	0xffffffffffffffff, 0x7fffffffffffffff,	0x8000000000000001)
	MUL(27, l,	0xffffffffffffffff, 0xffffffffffffffff,	1)
	MUL(0, ul,	0x7fffffff,	    1,			0x7fffffff)
	MUL(1, ul,	1,		    0x7fffffff,		0x7fffffff)
	MUL(2, ul,	0x80000000,	    1,			0x80000000)
	MUL(3, ul,	1,		    0x80000000,		0x80000000)
	MUL(4, ul,	0x7fffffff,	    2,			0xfffffffe)
	MUL(5, ul,	2,		    0x7fffffff,		0xfffffffe)
	MUL(6, ul,	0x80000000,	    2,			0x100000000)
	MUL(7, ul,	2,		    0x80000000,		0x100000000)
	MUL(8, ul,	0x7fffffff,	    0x80000000,		0x3fffffff80000000)
	MUL(9, ul,	0x80000000,	    0x7fffffff,		0x3fffffff80000000)
	MUL(10, ul,	0x7fffffff,	    0,			0)
	MUL(11, ul,	0,		    0x7fffffff,		0)
	MUL(12, ul,	0x7fffffff,	    0xffffffff,		0x7ffffffe80000001)
	MUL(13, ul,	0xffffffff,	    0x7fffffff,		0x7ffffffe80000001)
	MUL(14, ul,	0xffffffff,	    0xffffffff,		0xfffffffe00000001)
	MUL(15, ul,	0x7fffffffffffffff, 1,			0x7fffffffffffffff)
	MUL(16, ul,	1,		    0x7fffffffffffffff,	0x7fffffffffffffff)
	MUL(17, ul,	0x8000000000000000, 1,			0x8000000000000000)
	MUL(18, ul,	1,		    0x8000000000000000,	0x8000000000000000)
	MUL(19, ul,	0x7fffffffffffffff, 2,			0xfffffffffffffffe)
	MUL(20, ul,	2,		    0x7fffffffffffffff,	0xfffffffffffffffe)
	MUL(21, ul,	0x8000000000000000, 2,			0)
	MUL(22, ul,	2,		    0x8000000000000000,	0)
	MUL(23, ul,	0x7fffffffffffffff, 0x8000000000000000,	0x8000000000000000)
	MUL(24, ul,	0x8000000000000000, 0x7fffffffffffffff,	0x8000000000000000)
	MUL(25, ul,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000001)
	MUL(26, ul,	0xffffffffffffffff, 0x7fffffffffffffff,	0x8000000000000001)
	MUL(27, ul,	0xffffffffffffffff, 0xffffffffffffffff,	1)
#endif

#undef MUL
#define MUL(N, T, I0, V)	ALUC(N, T, mul, I0, V)
	MUL(0, i,	0,			0)
	MUL(1, i,	0x7fffffff,		1)
	MUL(2, i,	0x80000000,		0)
	MUL(3, i,	0xffffffff,		1)
	MUL(0, ui,	0,			0)
	MUL(1, ui,	0x7fffffff,		1)
	MUL(2, ui,	0x80000000,		0)
	MUL(3, ui,	0xffffffff,		1)
#if __WORDSIZE == 32
	MUL(0, l,	0,			0)
	MUL(1, l,	0x7fffffff,		1)
	MUL(2, l,	0x80000000,		0)
	MUL(3, l,	0xffffffff,		1)
	MUL(0, ul,	0,			0)
	MUL(1, ul,	0x7fffffff,		1)
	MUL(2, ul,	0x80000000,		0)
	MUL(3, ul,	0xffffffff,		1)
#else
	MUL(0, l,	0,			0)
	MUL(1, l,	0x7fffffff,		0x3fffffff00000001)
	MUL(2, l,	0x80000000,		0x4000000000000000)
	MUL(3, l,	0xffffffff,		0xfffffffe00000001)
	MUL(4, l,	0x7fffffffffffffff,	1)
	MUL(5, l,	0x8000000000000000,	0)
	MUL(6, l,	0xffffffffffffffff,	1)
	MUL(0, ul,	0,			0)
	MUL(1, ul,	0x7fffffff,		0x3fffffff00000001)
	MUL(2, ul,	0x80000000,		0x4000000000000000)
	MUL(3, ul,	0xffffffff,		0xfffffffe00000001)
	MUL(4, ul,	0x7fffffffffffffff,	1)
	MUL(5, ul,	0x8000000000000000,	0)
	MUL(6, ul,	0xffffffffffffffff,	1)
#endif

#undef MUL
#define MUL(N, T, I0, I1, V)	FOP(N, T, mul, I0, I1, V)
	MUL(0, f,	-0.5,	    0.5,	-0.25)
	MUL(1, f,	 0.25,	    0.75,	 0.1875)
	MUL(0, d,	-0.5,	    0.5,	-0.25)
	MUL(1, d,	 0.25,	    0.75,	 0.1875)

	ret
