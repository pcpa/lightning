#include "alu.inc"

.code	$(4 * 1024 * 1024)
	prolog 0

#define RSB(N, T, I0, I1, V)	ALU(N, T, rsb, I0, I1, V)
	RSB(0, i,	1,	    0x7fffffff,	0x7ffffffe)
	RSB(1, i,	0x7fffffff, 1,		0x80000002)
	RSB(2, i,	1,	    0x80000000,	0x7fffffff)
	RSB(3, i,	0x80000000, 1,		0x80000001)
	RSB(4, i,	0x80000000, 0x7fffffff,	0xffffffff)
	RSB(5, i,	0x7fffffff, 0x80000000,	1)
	RSB(6, i,	0xffffffff, 0x7fffffff,	0x80000000)
	RSB(7, i,	0x7fffffff, 0xffffffff,	0x80000000)
	RSB(9, i,	0xffffffff, 0xffffffff,	0)
	RSB(10, i,	0,	    0x7fffffff,	0x7fffffff)
	RSB(11, i,	0x7fffffff, 0,		0x80000001)
	RSB(0, ui,	1,	    0x7fffffff,	0x7ffffffe)
	RSB(1, ui,	0x7fffffff, 1,		0x80000002)
	RSB(2, ui,	1,	    0x80000000,	0x7fffffff)
	RSB(3, ui,	0x80000000, 1,		0x80000001)
	RSB(4, ui,	0x80000000, 0x7fffffff,	0xffffffff)
	RSB(5, ui,	0x7fffffff, 0x80000000,	1)
	RSB(6, ui,	0xffffffff, 0x7fffffff,	0x80000000)
	RSB(7, ui,	0x7fffffff, 0xffffffff,	0x80000000)
	RSB(9, ui,	0xffffffff, 0xffffffff,	0)
	RSB(10, ui,	0,	    0x7fffffff,	0x7fffffff)
	RSB(11, ui,	0x7fffffff, 0,		0x80000001)
#if __WORDSIZE == 32
	RSB(0, l,	1,	    0x7fffffff,	0x7ffffffe)
	RSB(1, l,	0x7fffffff, 1,		0x80000002)
	RSB(2, l,	1,	    0x80000000,	0x7fffffff)
	RSB(3, l,	0x80000000, 1,		0x80000001)
	RSB(4, l,	0x80000000, 0x7fffffff,	0xffffffff)
	RSB(5, l,	0x7fffffff, 0x80000000,	1)
	RSB(6, l,	0xffffffff, 0x7fffffff,	0x80000000)
	RSB(7, l,	0x7fffffff, 0xffffffff,	0x80000000)
	RSB(9, l,	0xffffffff, 0xffffffff,	0)
	RSB(10, l,	0,	    0x7fffffff,	0x7fffffff)
	RSB(11, l,	0x7fffffff, 0,		0x80000001)
	RSB(0, ul,	1,	    0x7fffffff,	0x7ffffffe)
	RSB(1, ul,	0x7fffffff, 1,		0x80000002)
	RSB(2, ul,	1,	    0x80000000,	0x7fffffff)
	RSB(3, ul,	0x80000000, 1,		0x80000001)
	RSB(4, ul,	0x80000000, 0x7fffffff,	0xffffffff)
	RSB(5, ul,	0x7fffffff, 0x80000000,	1)
	RSB(6, ul,	0xffffffff, 0x7fffffff,	0x80000000)
	RSB(7, ul,	0x7fffffff, 0xffffffff,	0x80000000)
	RSB(9, ul,	0xffffffff, 0xffffffff,	0)
	RSB(10, ul,	0,	    0x7fffffff,	0x7fffffff)
	RSB(11, ul,	0x7fffffff, 0,		0x80000001)
	RSB(0, p,	1,	    0x7fffffff,	0x7ffffffe)
	RSB(1, p,	0x7fffffff, 1,		0x80000002)
	RSB(2, p,	1,	    0x80000000,	0x7fffffff)
	RSB(3, p,	0x80000000, 1,		0x80000001)
	RSB(4, p,	0x80000000, 0x7fffffff,	0xffffffff)
	RSB(5, p,	0x7fffffff, 0x80000000,	1)
	RSB(6, p,	0xffffffff, 0x7fffffff,	0x80000000)
	RSB(7, p,	0x7fffffff, 0xffffffff,	0x80000000)
	RSB(9, p,	0xffffffff, 0xffffffff,	0)
	RSB(10, p,	0,	    0x7fffffff,	0x7fffffff)
	RSB(11, p,	0x7fffffff, 0,		0x80000001)
#else
	RSB(0, l,	1,		    0x7fffffff,		0x7ffffffe)
	RSB(1, l,	0x7fffffff,	    1,			0xffffffff80000002)
	RSB(2, l,	1,		    0x80000000,		0x7fffffff)
	RSB(3, l,	0x80000000,	    1,			0xffffffff80000001)
	RSB(4, l,	0x80000000,	    0x7fffffff,		0xffffffffffffffff)
	RSB(5, l,	0x7fffffff,	    0x80000000,		1)
	RSB(6, l,	0xffffffff,	    0x7fffffff,		0xffffffff80000000)
	RSB(7, l,	0x7fffffff,	    0xffffffff,		0x80000000)
	RSB(9, l,	0xffffffff,	    0xffffffff,		0)
	RSB(10, l,	0,		    0x7fffffff,		0x7fffffff)
	RSB(11, l,	0x7fffffff,	    0,			0xffffffff80000001)
	RSB(12, l,	1,		    0x7fffffffffffffff,	0x7ffffffffffffffe)
	RSB(13, l,	0x7fffffffffffffff, 1,			0x8000000000000002)
	RSB(14, l,	1,		    0x8000000000000000, 0x7fffffffffffffff)
	RSB(15, l,	0x8000000000000000, 1,			0x8000000000000001)
	RSB(16, l,	0x8000000000000000, 0x7fffffffffffffff,	0xffffffffffffffff)
	RSB(17, l,	0x7fffffffffffffff, 0x8000000000000000,	1)
	RSB(18, l,	0xffffffffffffffff, 0x7fffffffffffffff,	0x8000000000000000)
	RSB(19, l,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000000)
	RSB(20, l,	0xffffffffffffffff, 0xffffffffffffffff,	0)
	RSB(0, ul,	1,		    0x7fffffff,		0x7ffffffe)
	RSB(1, ul,	0x7fffffff,	    1,			0xffffffff80000002)
	RSB(2, ul,	1,		    0x80000000,		0x7fffffff)
	RSB(3, ul,	0x80000000,	    1,			0xffffffff80000001)
	RSB(4, ul,	0x80000000,	    0x7fffffff,		0xffffffffffffffff)
	RSB(5, ul,	0x7fffffff,	    0x80000000,		1)
	RSB(6, ul,	0xffffffff,	    0x7fffffff,		0xffffffff80000000)
	RSB(7, ul,	0x7fffffff,	    0xffffffff,		0x80000000)
	RSB(9, ul,	0xffffffff,	    0xffffffff,		0)
	RSB(10, ul,	0,		    0x7fffffff,		0x7fffffff)
	RSB(11, ul,	0x7fffffff,	    0,			0xffffffff80000001)
	RSB(12, ul,	1,		    0x7fffffffffffffff,	0x7ffffffffffffffe)
	RSB(13, ul,	0x7fffffffffffffff, 1,			0x8000000000000002)
	RSB(14, ul,	1,		    0x8000000000000000,	0x7fffffffffffffff)
	RSB(15, ul,	0x8000000000000000, 1,			0x8000000000000001)
	RSB(16, ul,	0x8000000000000000, 0x7fffffffffffffff,	0xffffffffffffffff)
	RSB(17, ul,	0x7fffffffffffffff, 0x8000000000000000,	1)
	RSB(18, ul,	0xffffffffffffffff, 0x7fffffffffffffff,	0x8000000000000000)
	RSB(19, ul,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000000)
	RSB(20, ul,	0xffffffffffffffff, 0xffffffffffffffff,	0)
	RSB(0, p,	1,		    0x7fffffff,		0x7ffffffe)
	RSB(1, p,	0x7fffffff,	    1,			0xffffffff80000002)
	RSB(2, p,	1,		    0x80000000,		0x7fffffff)
	RSB(3, p,	0x80000000,	    1,			0xffffffff80000001)
	RSB(4, p,	0x80000000,	    0x7fffffff,		0xffffffffffffffff)
	RSB(5, p,	0x7fffffff,	    0x80000000,		1)
	RSB(6, p,	0xffffffff,	    0x7fffffff,		0xffffffff80000000)
	RSB(7, p,	0x7fffffff,	    0xffffffff,		0x80000000)
	RSB(9, p,	0xffffffff,	    0xffffffff,		0)
	RSB(10, p,	0,		    0x7fffffff,		0x7fffffff)
	RSB(11, p,	0x7fffffff,	    0,			0xffffffff80000001)
	RSB(12, p,	1,		    0x7fffffffffffffff,	0x7ffffffffffffffe)
	RSB(13, p,	0x7fffffffffffffff, 1,			0x8000000000000002)
	RSB(14, p,	1,		    0x8000000000000000,	0x7fffffffffffffff)
	RSB(15, p,	0x8000000000000000, 1,			0x8000000000000001)
	RSB(16, p,	0x8000000000000000, 0x7fffffffffffffff,	0xffffffffffffffff)
	RSB(17, p,	0x7fffffffffffffff, 0x8000000000000000,	1)
	RSB(18, p,	0xffffffffffffffff, 0x7fffffffffffffff,	0x8000000000000000)
	RSB(19, p,	0x7fffffffffffffff, 0xffffffffffffffff,	0x8000000000000000)
	RSB(20, p,	0xffffffffffffffff, 0xffffffffffffffff,	0)
#endif

#undef RSB
#define RSB(N, T, I0, V)	ALUC(N, T, rsb, I0, V)
	RSB(0, i,	0,			0)
	RSB(1, i,	0x7fffffff,		0)
	RSB(2, i,	0x80000000,		0)
	RSB(3, i,	0xffffffff,		0)
	RSB(0, ui,	0,			0)
	RSB(1, ui,	0x7fffffff,		0)
	RSB(2, ui,	0x80000000,		0)
	RSB(3, ui,	0xffffffff,		0)
#if __WORDSIZE == 32
	RSB(0, l,	0,			0)
	RSB(1, l,	0x7fffffff,		0)
	RSB(2, l,	0x80000000,		0)
	RSB(3, l,	0xffffffff,		0)
	RSB(0, ul,	0,			0)
	RSB(1, ul,	0x7fffffff,		0)
	RSB(2, ul,	0x80000000,		0)
	RSB(3, ul,	0xffffffff,		0)
	RSB(0, p,	0,			0)
	RSB(1, p,	0x7fffffff,		0)
	RSB(2, p,	0x80000000,		0)
	RSB(3, p,	0xffffffff,		0)
#else
	RSB(0, l,	0,			0)
	RSB(1, l,	0x7fffffff,		0)
	RSB(2, l,	0x80000000,		0)
	RSB(3, l,	0xffffffff,		0)
	RSB(4, l,	0x7fffffffffffffff,	0)
	RSB(5, l,	0x8000000000000000,	0)
	RSB(6, l,	0xffffffffffffffff,	0)
	RSB(0, ul,	0,			0)
	RSB(1, ul,	0x7fffffff,		0)
	RSB(2, ul,	0x80000000,		0)
	RSB(3, ul,	0xffffffff,		0)
	RSB(4, ul,	0x7fffffffffffffff,	0)
	RSB(5, ul,	0x8000000000000000,	0)
	RSB(6, ul,	0xffffffffffffffff,	0)
	RSB(0, p,	0,			0)
	RSB(1, p,	0x7fffffff,		0)
	RSB(2, p,	0x80000000,		0)
	RSB(3, p,	0xffffffff,		0)
	RSB(4, p,	0x7fffffffffffffff,	0)
	RSB(5, p,	0x8000000000000000,	0)
	RSB(6, p,	0xffffffffffffffff,	0)
#endif

#undef RSB
#define RSB(N, T, I0, I1, V)	FOP(N, T, rsb, I0, I1, V)
	RSB(0, f,	0.5,	    -0.5,	-1.0)
	RSB(1, f,	0.75,	     0.25,	-0.5)
	RSB(0, d,	0.5,	    -0.5,	-1.0)
	RSB(1, d,	0.75,	     0.25,	-0.5)

	ret
